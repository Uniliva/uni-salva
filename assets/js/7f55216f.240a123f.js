"use strict";(self.webpackChunkuni_docs=self.webpackChunkuni_docs||[]).push([[949],{28453:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>c});var o=n(96540);const s={},r=o.createContext(s);function t(e){const a=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(r.Provider,{value:a},e.children)}},62636:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"devops-notes/argoCD/index","title":" ArgoCD","description":"---","source":"@site/docs/devops-notes/03-argoCD/index.md","sourceDirName":"devops-notes/03-argoCD","slug":"/devops-notes/argoCD/","permalink":"/uni-salva/docs/devops-notes/argoCD/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/devops-notes/03-argoCD/index.md","tags":[],"version":"current","frontMatter":{"title":" ArgoCD"},"sidebar":"devopsNotesSidebar","previous":{"title":"Istio","permalink":"/uni-salva/docs/devops-notes/istio-service-mash/"},"next":{"title":"Grafana","permalink":"/uni-salva/docs/devops-notes/grafana/"}}');var s=n(74848),r=n(28453);const t={title:" ArgoCD"},c=void 0,i={},d=[{value:"Instala\xe7\xe3o",id:"instala\xe7\xe3o",level:3},{value:"Tutoriais",id:"tutoriais",level:3},{value:"Usando e configurando",id:"usando-e-configurando",level:4}];function l(e){const a={a:"a",blockquote:"blockquote",code:"code",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.hr,{}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsx)(a.p,{children:"Aplica\xe7\xe3o de continuos deploy, usada para realizar o deploy de aplica\xe7\xf5es no kubernetes."}),"\n",(0,s.jsx)(a.p,{children:"Estamos acostumado com o formato padr\xe3o de pipeline do jenkins onde temos um fluxo \xfanico para o CI e CD. No caso do argoCD temos uma pipeline especifica para cada itens, sendo uma especifica para o processo de Continuos Delivery que \xe9 usada pelo argo."}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Introducing Argo CD \u2014 Declarative Continuous Delivery for Kubernetes | by  Mukulika Kapas | Argo Project",src:n(63151).A+"",width:"1206",height:"546"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"instala\xe7\xe3o",children:"Instala\xe7\xe3o"}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsx)(a.p,{children:"Diferentemente de outras ferramentas de Continuos delivery  o ArgoCD tem uma particularidade que \xe9 o fato dele ser implantado no cluster do kubernetes. Na verdade ele \xe9 uma extens\xe3o do kubernetes, pois usa a maioria da ferramentas dele."}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Isso tem diversas vantagens tais como:","\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Visibilidade do processo, coisa que o Jenkins n\xe3o tem por ser um processo externo."}),"\n",(0,s.jsx)(a.li,{children:"Tem um interface gr\xe1fica que mostra o processo em tempo real."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Para instalar o ARGOCD devemos criar um yaml file"}),"\n"]}),"\n",(0,s.jsxs)(a.blockquote,{children:["\n",(0,s.jsx)(a.p,{children:"Neste informamos qual:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"vai ser no repo onde v\xe3o estar os deployments."}),"\n",(0,s.jsx)(a.li,{children:"vai ser o cluster kubernets, onde ser\xe3o aplicados os deployments."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"image-20220814214048656",src:n(63538).A+"",width:"660",height:"676"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"tutoriais",children:"Tutoriais"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://www.youtube.com/watch?v=MeU5_k9ssrs",children:"ArgoCD Tutorial for Beginners"})}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://argo-cd.readthedocs.io/en/stable/getting_started/",children:"Documenta\xe7\xe3o"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h4,{id:"usando-e-configurando",children:"Usando e configurando"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-shell",children:'# cria o namespace do argo\nkubectl create namespace <namespace> \nkubectl create namespace argocd\n\n# Para instalar o argo no namespace\nkubectl apply -n <namespace> -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n\n# Para remover argo\nkubectl delete -n <namespace>  -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\nkubectl delete -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n\n## Acessando externamente\n# 1 - Para acessar mude o servi\xe7o do argo-serve com o comando abaixo\nkubectl patch svc argocd-server -n <namespace>  -p \'{"spec": {"type": "LoadBalancer"}}\'\nkubectl patch svc argocd-server -n argocd -p \'{"spec": {"type": "LoadBalancer"}}\'\n\n# 1.1 - depois de o comando para abrir o servi\xe7o\nminikube service argocd-server -n <namespace> \nminikube service argocd-server -n argocd\n\n# 1.3 Ou use o comando abaixo para liberar a porta\nkubectl port-forward svc/argocd-server -n <namespace>  8080:443\nkubectl port-forward svc/argocd-server -n argocd 8080:443\n\n\n## Login Via UI\n# Usuario padr\xe3o \xe9 admin \n# Para pegar a senha use\nkubectl -n <namespace> get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo\n\n\n## Login via CLI\n# instale o cli - https://argo-cd.readthedocs.io/en/stable/cli_installation/\n# Usuario padr\xe3o \xe9 admin \n# Para pegar a senha use\nkubectl -n <namespace> get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo\n\n# Use o comando abaixo - ARGOCD_SERVER \xe9 o ip e porta exporto externamente\nargocd login <ARGOCD_SERVER>\nargocd login 192.168.49.2:30634\n\n\n# Para altera a senha  #Nova senha - unisenha\nargocd account update-password\n\n\n# -------------------Register A Cluster To Deploy Apps To\n\n# Listando os contextos validos\nkubectl config get-contexts -o name\n\n# Configurando um contexto para deploy\nargocd cluster add <contexto>\nargocd cluster add minikube\n'})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Usuario"}),"\n"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-shell",children:"User: admin\nSenha: unisenha\n"})})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},63151:(e,a,n)=>{n.d(a,{A:()=>o});const o=n.p+"assets/images/10MpcMgFb4hkcqXtflGSYNQ-e6f831812832f08b306c1eecac3eafdf.png"},63538:(e,a,n)=>{n.d(a,{A:()=>o});const o=n.p+"assets/images/image-20220814214048656-49a455c2cbc01e02973d88aab30d1465.png"}}]);