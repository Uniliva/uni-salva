"use strict";(self.webpackChunkuni_docs=self.webpackChunkuni_docs||[]).push([[163],{5296:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205810711-c73d571d0067b5a80a2405329bd42ccc.png"},10563:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211123063855580-0d30231fc081f94b5bcade8bb0388b77.png"},14823:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205620779-bf926b40c9b21cbdb397d06cd140f52a.png"},15230:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/1KtnpIx1twobr16FP7hvAUg-a1ec93072051516cf255166151bbb6be.png"},18967:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120094541264-1e1ed633e2ca8f9557cf9b7b2e48605e.png"},24719:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211124053008318-aff73beb936727bcfe0459cdb5c2e6d1.png"},25263:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120095457188-379bc1195aa420be0049e9632ee1cc9c.png"},26630:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211128091344881-97989b7b6f2704af2f45456ec83d1e61.png"},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var a=s(96540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}},31297:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>t});const a=JSON.parse('{"id":"devops-notes/kubernetes/conteudo","title":"Documenta\xe7\xe3o","description":"---","source":"@site/docs/devops-notes/01-kubernetes/conteudo.md","sourceDirName":"devops-notes/01-kubernetes","slug":"/devops-notes/kubernetes/conteudo","permalink":"/uni-salva/docs/devops-notes/kubernetes/conteudo","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/devops-notes/01-kubernetes/conteudo.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Documenta\xe7\xe3o","sidebar_position":1},"sidebar":"devopsNotesSidebar","next":{"title":"Kind","permalink":"/uni-salva/docs/devops-notes/kubernetes/kind"}}');var o=s(74848),i=s(28453);const r={title:"Documenta\xe7\xe3o",sidebar_position:1},l=void 0,c={},t=[{value:"Entendendo",id:"entendendo",level:2},{value:"Cluster",id:"cluster",level:3},{value:"API",id:"api",level:3},{value:"Pods",id:"pods",level:3},{value:"Rolando kubernets local",id:"rolando-kubernets-local",level:2},{value:"Instala\xe7\xe3o no Linux",id:"instala\xe7\xe3o-no-linux",level:3},{value:"Comandos uteis",id:"comandos-uteis",level:3},{value:"Criando recurso de forma declarativa",id:"criando-recurso-de-forma-declarativa",level:2},{value:"Criando pods",id:"criando-pods",level:3},{value:"Criando sevi\xe7os (svc)",id:"criando-sevi\xe7os-svc",level:3},{value:"Comandos",id:"comandos",level:3},{value:"Cluster de ips",id:"cluster-de-ips",level:3},{value:"NodePort",id:"nodeport",level:3},{value:"Loadbalance",id:"loadbalance",level:3},{value:"ConfigMap",id:"configmap",level:3},{value:"Importando o configMap  na defini\xe7\xe3o de um pod",id:"importando-o-configmap--na-defini\xe7\xe3o-de-um-pod",level:4},{value:"Por variaveis",id:"por-variaveis",level:5},{value:"Pelo arquivo completo",id:"pelo-arquivo-completo",level:5},{value:"Recursos do kubernetes",id:"recursos-do-kubernetes",level:2},{value:"Recursos de disponibilidade",id:"recursos-de-disponibilidade",level:3},{value:"ReplicaSet",id:"replicaset",level:4},{value:"Deployments",id:"deployments",level:4},{value:"Comandos",id:"comandos-1",level:5},{value:"Historico de vers\xf5es",id:"historico-de-vers\xf5es",level:5},{value:"Voltando uma vers\xe3o (rollback)",id:"voltando-uma-vers\xe3o-rollback",level:5},{value:"Recursos de armazenamentos",id:"recursos-de-armazenamentos",level:3},{value:"Volumes",id:"volumes",level:4},{value:"Persistents Volumes",id:"persistents-volumes",level:4},{value:"Comandos",id:"comandos-2",level:5},{value:"Persistent Volume Claim",id:"persistent-volume-claim",level:5},{value:"Storage Classes",id:"storage-classes",level:4},{value:"Comandos",id:"comandos-3",level:5},{value:"Statefull Set",id:"statefull-set",level:4},{value:"Recurso para healthcheck",id:"recurso-para-healthcheck",level:3},{value:"Liveness Prob",id:"liveness-prob",level:4},{value:"Readiness Probes",id:"readiness-probes",level:4},{value:"Recurso de escalabilidade",id:"recurso-de-escalabilidade",level:3},{value:"HPA - Horizontal Pod AutoScale",id:"hpa---horizontal-pod-autoscale",level:4},{value:"Comandos",id:"comandos-4",level:4},{value:"Componetes",id:"componetes",level:2},{value:"Chart - exemplos",id:"chart---exemplos",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"entendendo",children:"Entendendo"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205347741",src:s(61746).A+"",width:"476",height:"385"})}),"\n",(0,o.jsx)(n.h3,{id:"cluster",children:"Cluster"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Um cluster \xe9 composto por:"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"plano de controle - gerencia os servi\xe7os dentro do host."}),"\n",(0,o.jsx)(n.li,{children:"scheduler - Resp. por subir e os servi\xe7os."}),"\n",(0,o.jsx)(n.li,{children:"API Server - resp pela comunica\xe7\xe3o ente n\xf3s e master."}),"\n",(0,o.jsx)(n.li,{children:"Node Controller - Resp. por manter o estado dentro do cluster store."}),"\n",(0,o.jsx)(n.li,{children:"Cluster store (etcd) - Armazenamentos do dados do cluster."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205620779",src:s(14823).A+"",width:"716",height:"601"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Exemplo de um Cluster"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205700816",src:s(37024).A+"",width:"1521",height:"717"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Master e nodes"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205722849",src:s(79336).A+"",width:"1480",height:"600"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Estrutura"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205740206",src:s(55417).A+"",width:"1395",height:"685"})}),"\n",(0,o.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Gerencia os recursos do cluster (criar pod, deletera Replica Set, criar volume ..)"}),"\n",(0,o.jsx)(n.li,{children:"Para usar manipular os recusos do kuberntes, sempre vamos usar a api"}),"\n",(0,o.jsx)(n.li,{children:"Para usar a api usamos o kubctl."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118205810711",src:s(5296).A+"",width:"1421",height:"684"})}),"\n",(0,o.jsx)(n.h3,{id:"pods",children:"Pods"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Capsula que pode conter 1 ou mais containers."}),"\n",(0,o.jsx)(n.li,{children:"Sempre que se cria um pod temos um endere\xe7o ip para aquele pod, e como um pod pode ter varios container."}),"\n",(0,o.jsx)(n.li,{children:"Nesse caso n\xe3o podemos ter mais dois container com a mesma porta dentro de um pod."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211118210009141",src:s(74513).A+"",width:"601",height:"408"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Caso um pode falhe (ou seja todos os container estejam falhados), o kubernetes vai mat\xe1-lo e substitu\xed-lo por outro, e n\xe3o temos controle que qual ip sera atribuido a esse novo pod."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"rolando-kubernets-local",children:"Rolando kubernets local"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Para rodar o kubernets localmente, usamos o minikube, para baixa-lo acesse:"}),"\n",(0,o.jsxs)(n.p,{children:["link: ",(0,o.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"https://minikube.sigs.k8s.io/docs/start/"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"instala\xe7\xe3o-no-linux",children:"Instala\xe7\xe3o no Linux"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'## Arquivo de configura\xe7\xe3o\n\n\n\n## Minikube\n## link: https://minikube.sigs.k8s.io/docs/start/\n\n### Install minikube\ncurl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube\n\n### Start\nminikube start\n\n### Use\nminikube kubectl -- get nodes\n\n### Create alias dentro do .bashrc\nalias kubectl="minikube kubectl --"\n\n#-----------------------------------------------------------------------------------------------\n## h\xe1 a op\xe7\n\n\n#-----------------------------------------------------------------------------------------------\n# Listando contextos possiveis\ncat ~/.kube/config \nkubcetl config get-cluster\n\n# setar um contexto\nkubectl cluster-info --context <contexto>\nkubcetl config use-context <contexto>\n\n# Setando o Kind como cluster padr\xe3o no kubctl\nkubectl cluster-info --context kind-kind\nkubcetl config use-context kind-kind\n\n# Setando o minikube como cluster padr\xe3o no kubctl\nkubectl cluster-info --context  minikube\n\n# Setar namespace padr\xe3o\nkubectl config set-context --current --namespace=<namespace>\nkubectl config set-context --current --namespace=ucontas-app\n\n\n#-----------------------------------------------------------------------------------------------\n### KUBERNETES (KUBECTL)\nalias k="kubectl"\nalias ka="kubectl apply -f"\nalias kl="kubectl logs"\nalias kdd="kubectl describe deployment"\nalias kdp="kubectl describe pod"\nalias kds="kubectl describe service"\nalias kei="kubectl exec -it"\nalias kgd="kubectl get deployments"\nalias kgp="kubectl get pods"\nalias kgs="kubectl get services"\nalias krrd="kubectl rollout restart deployment"\nalias kdad="kubectl delete --all deployments"\nalias kdap="kubectl delete --all pods"\nalias kdas="kubectl delete --all services"\n\n### DOCKER\nalias d="docker"\nalias dc="docker compose"\nalias di="docker images"\nalias dl="docker logs"\nalias db="docker build -t"\nalias dps="docker ps"\nalias dcu="docker compose up"\nalias dcc="docker compose config"\nalias drc="docker rm $(docker ps -a -q)"\nalias dsa="docker kill $(docker ps -q)"\nalias dsp="docker system prune -a --volumes"\nalias dcps="docker compose ps"\nalias dcenv="docker compose --env-file"\nalias usedd="docker context use docker-desktop"\nalias usede="docker context use default"\n\n### Dasboard\nminikube dashboard\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"comandos-uteis",children:"Comandos uteis"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Segue alguns comandos uteis usados"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# Recuperas os nodes criados\nkubectl get nodes\n\n# abre servi\xe7os\nminikube service <nome do servi\xe7o>\n\n# Listar pods \nkubectl get pods\n\n# listar pods com detalhes\nkubctl get pods -o wide\n\n# Acompanhar status pod \nkubectl get pods --watch\n\n\n# Criar novo pod\nkubectl run <nome-pode> --image=<imagem>:<vers\xe3o>\n# - ex:\nkubectl run nginx-pod --image=nginx:latest\n\n# Descrever informa\xe7\xf5es do pod\nkubectl describe <nome-pode>\n# - ex\nkubectl describe pod nginx-pod\n\n# Editar pod\nkubectl edit pod <nome-pod>\nkubectl edit pod nginx-pod\n\n# deletar pod\nkubectl delete pod <noime-pod>\nkubectl delete pod  nginx-pod\n# deletar todos os pods\nkubectl delete pods --all\n\n\n# Entra no container com o modo interativo\nkubectl exec -it <pod> -- bash\n\n# Entra no container caso tenha mais de um no pod\nkubectl exec -it <pod> --container <container-name> -- bash\n\n# Para sair do container em uso\ncrtl + D\n\n# Acessando api do kubenetes\nkubectl proxy --porta=8085\n\n# acesse no browser na porta definida\nlocalhost:8085/apis\n\n\n## Logs\nkubectl logs -f --selector <label-key-value>  -n <namespace>\n#kubectl logs --selector app=ucontas-api  -n ucontas-app\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"criando-recurso-de-forma-declarativa",children:"Criando recurso de forma declarativa"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"criando-pods",children:"Criando pods"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Para criar pods de forma declarativa, primerio crie um arquivo usando a exten\xe7\xe3o .yaml"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Semelhante o abaixo"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1  # define a vers\xe3o da api do kubernetes\nkind: pod       # define o tipo de recurso criado \nmetadata:       # Meta dados que podesm ser adicionado ao pod\n  name: uni-pod  # nome do pod\n  labels:\n    app: segundo-pod\nspec:               # epecifica\xe7\xe3o do pod\n  containers:       # containers que compoe o pod\n    - name: uni-nginx-container   # nome do container\n      image: nginx:latest         # imagem usada para criar o container\n    - name: uni-http-container\n      image: httpd:alpine\n    - name: db-noticias-container\n      image: aluracursos/mysql-db:1\n      env:\n        - name: "MYSQL_ROOT_PASSWORD"\n          value: "root"\n        - name: "MYSQL_DATABASE"\n          value: "test_db"\n        - name: "MYSQL_USER"\n          value: "user"\n       ports: \n         - containerPort: 3306\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Comandos"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# criado container\nkubectl apply -f <nome-doa-arquivo>.yaml\n\n# delete com arquivo deployment\nkubctl delete -f <file>\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"criando-sevi\xe7os-svc",children:"Criando sevi\xe7os (svc)"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"S\xe3o abstra\xe7\xf5es para expor aplica\xe7\xf5es executando em um ou mais pods, que podem prover ips's fixos para comunica\xe7\xe3o, alem de DNS e balanciamento de carga."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Podem ser dos tipos:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"ClusterIP"}),"\n",(0,o.jsx)(n.li,{children:"NodePort"}),"\n",(0,o.jsx)(n.li,{children:"LoadBalancer"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"comandos",children:"Comandos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# Criando um novo servide\nkubectl apply -f <file-do-svc>\n\n# listando services criados\nkubectl get services \n# ou\nkubectl get svc\n\n# ver os detalhes dos services\nkubectl describe service <nome-do-svc>\n# ou\nkubectl describe svc <nome-do-servi\xe7o>\n\n# Deletar servi\xe7os\nkubectl delete svc <service--name>\n# deletar todos os pods\nkubectl delete svc --all\n"})}),"\n",(0,o.jsx)(n.h3,{id:"cluster-de-ips",children:"Cluster de ips"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Serve para fazer a cominuca\xe7\xe3o entre diferentes pods dentro de um mesmo cluster. Usa labels para redirecionar o tafrico para os pods."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://media.geeksforgeeks.org/wp-content/uploads/20220104122834/41.PNG",alt:"Kubernetes - Cluster IP vs Node-Port - GeeksforGeeks"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"ex:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: svc-pod-2\nspec:\n  type: ClusterIP\n  selector:\n    app: segundo-pod # seletor de pod\n  ports:\n  - name: svc-pod-io\n    port: 80  # portra entrada - service\n    targetPort: 80 # porta do container / caso seja igual a port, n\xe3o precisa informar\n    protocol: TCP\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Neste exemplo, cria um cluster ip que gerar um ip fixo para o pod com a seletor (label) ",(0,o.jsx)(n.strong,{children:"app: segundo-po"})]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para ver detalhes do service use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"# ver os detalhes dos services\nkubectl get service <nome-do-svc>\nkubectl describe service <nome-do-svc>\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120085314918",src:s(53619).A+"",width:"617",height:"85"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120085353313",src:s(69775).A+"",width:"573",height:"284"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"nodeport",children:"NodePort"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Usado para permitir a comunica\xe7\xe3o com o mundo externo"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: svc-pod-1\nspec:\n  type: NodePort\n  selector:\n    app: primeiro-pod\n  ports:\n  - port: 80 # porta do meu service\n    targetPort: 80 # porta do container / caso seja igual a port, n\xe3o precisa informar\n    nodePort: 30001 # porta de acesso externo tem que esta no range 30000 a 32767\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para ver o ip para acesso dentro do node d\xea o comando:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# Mostra as configura\xe7\xf5es de forma extendida\nkubeclt get svc -o wide\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120094110671",src:s(91019).A+"",width:"1001",height:"129"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Para acessar o pod usando o nodePort dentro do cluster use:"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"curl 10.106.182.107:80"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Para acessa externamente - linux"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Se tiver no linux, para recuperar o ip mapeado para o cluster"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl get node -o wide\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120093342399",src:s(32090).A+"",width:"1212",height:"111"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Depois \xe9 so acessar ",(0,o.jsx)(n.a,{href:"http://192.168.49.2:30001/",children:"http://192.168.49.2:30001/"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120094146342",src:s(57383).A+"",width:"902",height:"428"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Para acessa externamente - windows"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Use localhost:30001"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"loadbalance",children:"Loadbalance"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Nada mais \xe9 do que um NodePort que permite a distribui\xe7\xe3o do trafico entres os pods de um container."}),"\n",(0,o.jsx)(n.p,{children:"Ele \xe9 entregado com o servi\xe7o de Kuberbetes das nuvens, nele voce criar um arquivo e diz quais s\xe3o os seletores e a partir dai o servi\xe7os de kubernets do provedor da nuvem gera um a instraestrutura de um loadbalance para que possamos acessa-los via web."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Por serem um Load Balancer, tamb\xe9m s\xe3o um NodePort e ClusterIP ao mesmo tempo."}),"\n",(0,o.jsx)(n.li,{children:"Utilizam automaticamente os balanceadores de carga de cloud providers."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120094541264",src:s(18967).A+"",width:"854",height:"447"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Exemplo de arquivo"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Service\nmetadata:\n  name: svc-lb-app-1\nspec:\n  type: LoadBalancer\n  selector:\n    app: primeiro-pod\n  ports:\n  - port: 20\n    targetPort: 80\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Dentro do provedor para executar a use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f <nome-arquivo>\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para ver o status use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:" kubectl get svc -o wide\n # ou\n  kubectl describe svc <svc-name>\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120095457188",src:s(25263).A+"",width:"882",height:"142"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Repare que o EXTERNAL-IP esta vazio, pois executamos localmente, se fosse num provedor, seria preenchiado com um ip para acesso web, repare tamb\xe9m que foi gerado uma porta para acesso externo dentro da rede onde o cluster esta, semelhante ao NodePort."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"configmap",children:"ConfigMap"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Permite extrair as configura\xe7\xe3o especificas para tornar um pod gen\xe9rico e reutiliz\xe1vel, com ele \xe9 poss\xedvel reutilizar configura\xe7\xf5es e varios pods"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-config-map\ndata:\n  MYSQL_ROOT_PASSWORD: root\n  MYSQL_DATABASE: test_db\n  MYSQL_USER: user\n  MYSQL_PASSWORD: pass    \n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para implantar use"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f <nome-arquivo>\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para listar o configmap use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shel",children:"kubectl get configmap\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120105736428",src:s(46578).A+"",width:"354",height:"87"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Para descrever o configmap use:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl describe configmap <nome-config-map>\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120110007635",src:s(71097).A+"",width:"390",height:"435"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"importando-o-configmap--na-defini\xe7\xe3o-de-um-pod",children:"Importando o configMap  na defini\xe7\xe3o de um pod"}),"\n",(0,o.jsx)(n.p,{children:"H\xe1 duas dorma de se fazer a importa\xe7\xe3o"}),"\n",(0,o.jsx)(n.h5,{id:"por-variaveis",children:"Por variaveis"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Mais verboso, e util quando se tem varios configMaps compartilhado"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: db-noticias\n  labels:\n    app: db-noticias\nspec:\n  containers:\n  - name: db-noticias-container\n    image: aluracursos/mysql-db:1\n    env:\n      - name: "MYSQL_ROOT_PASSWORD"\n        valueFrom:\n          configMapKeyRef:\n            name: db-config-map\n            key: MYSQL_ROOT_PASSWORD\n      - name: "MYSQL_DATABASE"        \n        valueFrom:\n          configMapKeyRef:\n            name: db-config-map\n            key: MYSQL_DATABASE\n      - name: "MYSQL_USER"        \n        valueFrom:\n          configMapKeyRef:\n            name: db-config-map\n            key: MYSQL_USER\n      - name: "MYSQL_PASSWORD"        \n        valueFrom:\n          configMapKeyRef:\n            name: db-config-map\n            key: MYSQL_PASSWORD\n    resources:\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n    ports: \n      - containerPort: 3306    \n'})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120110649603",src:s(69358).A+"",width:"991",height:"672"})}),"\n",(0,o.jsx)(n.h5,{id:"pelo-arquivo-completo",children:"Pelo arquivo completo"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Menos verboso, usado quando o config map tem a maioria ou todas a variaveis (configura\xe7\xf5es) que o pod ira usar"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: db-noticias\n  labels:\n    app: db-noticias\nspec:\n  containers:\n  - name: db-noticias-container\n    image: aluracursos/mysql-db:1\n    envFrom:\n      - configMapRef:\n          name: db-config-map            \n    resources:\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n    ports: \n      - containerPort: 3306\n'})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211120111517650",src:s(99881).A+"",width:"1015",height:"466"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"recursos-do-kubernetes",children:"Recursos do kubernetes"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Arquivos de exemplo dentro da pasta workspace/projeto-avan\xe7ado"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Tipos de recuros que vamos ver:"}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["recursos de disponibilidade","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"ReplicasSets"}),"\n",(0,o.jsx)(n.li,{children:"Deployments"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["recursos de armazenamento","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Volumes"}),"\n",(0,o.jsx)(n.li,{children:"Persistents Volumes"}),"\n",(0,o.jsx)(n.li,{children:"Persistent Volume Claim"}),"\n",(0,o.jsx)(n.li,{children:"Storage Classes"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"recursos-de-disponibilidade",children:"Recursos de disponibilidade"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"img",src:s(15230).A+"",width:"724",height:"358"})}),"\n",(0,o.jsx)(n.h4,{id:"replicaset",children:"ReplicaSet"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122060546098",src:s(53190).A+"",width:"764",height:"302"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Estrutura que pode encapsular um ou mais pods, usada quando se quer manter alta disponibilidade, pois se um pod cair o replicaSet sobe outro automaticamente."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: portal-noticias-replicaset\nspec:\n  template: # template a ser usado pelo replicaset\n    metadata:\n      name: portal-noticias\n      labels: \n        app: portal-noticias # label usada para identificar os pods\n    spec:\n      containers:\n        - name: portal-noticias-container\n          image: aluracursos/portal-noticias:1\n          ports:\n            - containerPort: 80\n          envFrom:\n            - configMapRef:\n                name: portal-configmap\n  replicas: 3 # numeros de replicas que deve existir\n  selector: # serve pra dizer o kubernetes que ele deve gerenciar os pods com essa label\n    matchLabels:\n      app: portal-noticias \n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Como definidos tres replicas, ao se verificar os pods veremos:"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122055649330",src:s(57935).A+"",width:"701",height:"163"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"caso delete algum pod do replicaSet ele automaticamente recriar\xe1 um novo."}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para ver os replicasSets criado os o comando:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl get replicasset\nkubectl get rs\n# ou se quiser mais detalhes\nkubectl describe replicaset <nome>\nkubectl describe rs <nome>\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"deployments",children:"Deployments"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122060612288",src:s(92803).A+"",width:"817",height:"389"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx-pod  # deve ser igual ao labels do metadata do template\n  template:\n    metadata:\n      labels:\n        app: nginx-pod \n    spec:\n      containers:\n      - name: nginx-container\n        image: nginx:stable\n        resources:\n          limits:\n            memory: "128Mi"\n            cpu: "500m"\n        ports:\n        - containerPort: 80\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Ao executar, ser\xe1 criado um replicaset com tres pods, semelhante ao visto anteriores:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f <nome-arquivo>    \n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122061513408",src:s(67006).A+"",width:"646",height:"451"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para listar e ver detalhes do deplyment use:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl get deployments\n# ou, caso queira mais detalhes use\nkubectl describe deployments <nome>\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"A diferencia que o deployment, permite adicionar outros recurso em um s\xf3 arquivo, alem de ter uns comandos para controle de versionamento."}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"comandos-1",children:"Comandos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# Aplicar deployment\nkubectl apply -f <nome-arquivo>    \n\n# Deletar deployment (deleta todos o recursos atrelados)\nkubectl delete deployment <nome do deployment>\nkubectl delete -f <nome-arquivo->\n# ou \n\n# Ver deployments\nkubectl get deployments\n\n# ou, caso queira mais detalhes use\nkubectl describe deployments <nome>\n\n# ver historico\nkubectl rollout history deployment <nome-do-deployment>\n\n# voltar pra uma vers\xe3o\nkubectl rollout undo deployment <nome-do-deploy> --to-revision=2\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Dica linux - crie alias"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'alias kubectl="minikube kubectl --"\nalias k="minikube kubectl --"\nfuntion k-dploy-msg(){\n    echo "Adicionando ao deployment $1 a anota\xe7\xe3o : $2"\n    kubectl annotate deployment $1 kubernetes.io/change-cause=$2\n}\n\nalias k-hd="kubectl rollout history deployment "\n'})}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"historico-de-vers\xf5es",children:"Historico de vers\xf5es"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Historico de altera\xe7\xf5es - mostra o historico de alera\xe7\xf5es"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl rollout history deployment <nome-do-deployment>\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122063059510",src:s(91903).A+"",width:"896",height:"112"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"obs:"})," Deve ser passadoa  flag --record no final do comando de ",(0,o.jsx)(n.strong,{children:"apply"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f <arquivo-deployment> --record\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122063130716",src:s(92625).A+"",width:"638",height:"93"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Altera mensagem de altera\xe7\xe3o"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Quando fazemos o passo anterior, e vemos o historico, so vemos a linha do deplyment onde ouver a altera\xe7\xe3o, caso queiramos adicionar uma mensagem, mais amigavel, podemos ap\xf3s o ",(0,o.jsx)(n.strong,{children:"apply"})," dar o comando abaixo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'kubectl annotate deployment <nome-do-deploy> kubernetes.io/change-cause="Messagem que queremos"\n'})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211122063143936",src:s(48011).A+"",width:"603",height:"116"})}),"\n",(0,o.jsx)(n.h5,{id:"voltando-uma-vers\xe3o-rollback",children:"Voltando uma vers\xe3o (rollback)"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Realizando o passo anterior podemos voltar vers\xf5es, (fazer um rollback) com o comando:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"kubectl rollout undo deployment <nome-do-deploy> --to-revision=2\n"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"recursos-de-armazenamentos",children:"Recursos de armazenamentos"}),"\n",(0,o.jsxs)(n.p,{children:["link: ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/",children:"https://kubernetes.io/docs/concepts/storage/volumes/"})]}),"\n",(0,o.jsx)(n.h4,{id:"volumes",children:"Volumes"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Semelhante aos volumes do docker, caso o container morrar os dados ficam armazenados no volume, a diferen\xe7a aqui e que o ciclo de vida do volume no kubernetes dica atrelado a vida do pod, caso o pod tenha 2 container se um morrer, e for recriado, os dados ainda estaram l\xe1, por\xe9 se o pod for distruido, os volumes ser\xe3o perdidos."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Pod\nmetadata:\n    name: pod-volume\nspec:\n    containers:\n      - name: nginx-container\n        image: nginx:latest\n        volumeMounts:\n            - mountPath: /volume-dentro-do-container\n              name: segundo-volume\n      - name: jenkins\n        image: jenkins/jenkins:alpine\n        volumeMounts:\n          - mountPath: /volume-dentro-do-container\n            name: segundo-volume\n    volumes:\n    - name: segundo-volume\n      hostPath:\n        path: /tmp/bkp\n        type: DirectoryOrCreate\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["o ",(0,o.jsx)(n.strong,{children:"type"})," do volume pode ser:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Directory - Quando o diretorio j\xe1 estiver criado."}),"\n",(0,o.jsx)(n.li,{children:"DirectoryOrCreate - Quando o diretorio n\xe3o existir, o kubernets cria."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Para executar isso localmente no linux, voc\xea estar\xe1 usando o minikube, que \xe9 um container docker que roda o kubernetes, por isso \xe9 necessario criar a pasta do mapeamento do volume  (caso esteja usando o ",(0,o.jsx)(n.strong,{children:"type"})," do volume como ",(0,o.jsx)(n.strong,{children:"directory"}),") dentro do minikube , N\xc3O em sua maquina, para isso use os comandos abaixo:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# logar no minikube\nminikube ssh\n\n# criar a pasta\ncd /tmp\nmkdir bkp\n\n# Sair do minikuve\ncrtl+d    \n"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"persistents-volumes",children:"Persistents Volumes"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211123062417716",src:s(88211).A+"",width:"850",height:"368"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"A ideia de PV (persistence volume) \xe9 usar o mesmo conceito anterior, porem na nuvem, onde se criaria um volume e se linkaria esse volume com o pod, para isso \xe9 necessario criar um pv, que vai armazenar a conex\xe3o do volume criado na nuvem para ser usado no kubernetes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Um PV \xe9 uma inst\xe2ncia de armazenamento virtual que \xe9 inclu\xedda como um volume no cluster. O PV aponta para um dispositivo de armazenamento f\xedsico em sua conta na nuvem e resume a API que \xe9 usada para se comunicar com o dispositivo de armazenamento. Para montar um PV em um app, deve-se ter um PVC correspondente. Os PVs montados aparecem como uma pasta dentro do sistema de arquivos do cont\xeainer."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"comandos-2",children:"Comandos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# listando storage class existentes\nkubectl get storageclass\n#ou\nkubectl get sc\n\n# listar persistence volumes claim\nkubectl get pvc\n\n#listar persistence volume\nkubectl get pv\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um PV no google cloud"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistVolume\nmetadata:\n    name: pv-1\nspec:\n    capacity:\n        storage: 10Gi\n    accessModes:\n        - ReadWriteOnce\n    gcePersistentDisk:\n        pdName: pv-disk\n    storageClassName: standard\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Tipos de volumes persistentes."}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Tipos de PersistentVolume s\xe3o implementados como plugins. Atualmente o Kubernetes suporta os plugins abaixo:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#awselasticblockstore",children:(0,o.jsx)(n.code,{children:"awsElasticBlockStore"})})," - AWS Elastic Block Store (EBS)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#azuredisk",children:(0,o.jsx)(n.code,{children:"azureDisk"})})," - Azure Disk"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#azurefile",children:(0,o.jsx)(n.code,{children:"azureFile"})})," - Azure File"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#cephfs",children:(0,o.jsx)(n.code,{children:"cephfs"})})," - CephFS volume"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#cinder",children:(0,o.jsx)(n.code,{children:"cinder"})})," - Cinder (OpenStack block storage) (",(0,o.jsx)(n.strong,{children:"depreciado"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#csi",children:(0,o.jsx)(n.code,{children:"csi"})})," - Container Storage Interface (CSI)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#fc",children:(0,o.jsx)(n.code,{children:"fc"})})," - Fibre Channel (FC) storage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#flexVolume",children:(0,o.jsx)(n.code,{children:"flexVolume"})})," - FlexVolume"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#flocker",children:(0,o.jsx)(n.code,{children:"flocker"})})," - Flocker storage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#gcepersistentdisk",children:(0,o.jsx)(n.code,{children:"gcePersistentDisk"})})," - GCE Persistent Disk"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#glusterfs",children:(0,o.jsx)(n.code,{children:"glusterfs"})})," - Glusterfs volume"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#hostpath",children:(0,o.jsx)(n.code,{children:"hostPath"})})," - HostPath volume (somente para teste de n\xf3 \xfanico; ISSO N\xc3O FUNCIONAR\xc1 num cluster multi-n\xf3s; ao inv\xe9s disso, considere a utiliza\xe7\xe3o de volume ",(0,o.jsx)(n.code,{children:"local"}),".)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#iscsi",children:(0,o.jsx)(n.code,{children:"iscsi"})})," - iSCSI (SCSI over IP) storage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#local",children:(0,o.jsx)(n.code,{children:"local"})})," - storage local montados nos n\xf3s."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#nfs",children:(0,o.jsx)(n.code,{children:"nfs"})})," - Network File System (NFS) storage"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"photonPersistentDisk"})," - Controlador Photon para disco persistente. (Esse tipo de volume n\xe3o funciona mais desde a remova\xe7\xe3o do provedor de cloud correspondente.)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#portworxvolume",children:(0,o.jsx)(n.code,{children:"portworxVolume"})})," - Volume Portworx"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#quobyte",children:(0,o.jsx)(n.code,{children:"quobyte"})})," - Volume Quobyte"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#rbd",children:(0,o.jsx)(n.code,{children:"rbd"})})," - Volume Rados Block Device (RBD)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#scaleio",children:(0,o.jsx)(n.code,{children:"scaleIO"})})," - Volume ScaleIO (",(0,o.jsx)(n.strong,{children:"depreciado"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#storageos",children:(0,o.jsx)(n.code,{children:"storageos"})})," - Volume StorageOS"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/volumes/#vspherevolume",children:(0,o.jsx)(n.code,{children:"vsphereVolume"})})," - Volume vSphere VMDK"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Modos de acessos"}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Os modos de acesso s\xe3o:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"ReadWriteOnce -- o volume pode ser montado como leitura-escrita por um n\xf3 \xfanico"}),"\n",(0,o.jsx)(n.li,{children:"ReadOnlyMany -- o volume pode ser montado como somente-leitura por v\xe1rios n\xf3s"}),"\n",(0,o.jsx)(n.li,{children:"ReadWriteMany -- o volume pode ser montado como leitura-escrita por v\xe1rios n\xf3s"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Na linha de comando, os modos de acesso ficam abreviados:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"RWO - ReadWriteOnce"}),"\n",(0,o.jsx)(n.li,{children:"ROX - ReadOnlyMany"}),"\n",(0,o.jsx)(n.li,{children:"RWX - ReadWriteMany"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Para usar o PV \xe9 necessario configurar uma claim para dara acessos ao containers"}),"\n"]}),"\n",(0,o.jsx)(n.h5,{id:"persistent-volume-claim",children:"Persistent Volume Claim"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211123063855580",src:s(10563).A+"",width:"346",height:"309"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Uma PVC \xe9 a solicita\xe7\xe3o para provisionar armazenamento persistente com um tipo e configura\xe7\xe3o espec\xedficos. Para especificar o tipo de armazenamento persistente que voc\xea deseja"}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um PVC no google cloud"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: pvc-1\nspec:\n    accessModes:\n        - ReadWriteOnde\n    resources:\n        requests:\n            storage: 10Gi\n    storageClassName: standard\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["para linkar um ",(0,o.jsx)(n.strong,{children:"pvc"})," a ",(0,o.jsx)(n.strong,{children:"pv"}),", como ",(0,o.jsx)(n.strong,{children:"pvc"}),' e uma "requisi\xe7\xe3o de armazenamento" usa-se as especifica\xe7\xf5es, ou seja, as especifica\xe7\xf5es do volume contidos no ',(0,o.jsx)(n.strong,{children:"pvc"})," devem ser igual ao contido no ",(0,o.jsx)(n.strong,{children:"pv"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um pod que aponta para um pvc"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n    name: pod-pv\nspec:\n    containers:\n        - name: nginx-container\n            image: nginx-latest\n            volumeMounts:\n                - mountPath: /volume-dentro-do-container\n                name: primeiro-pv\n    volumes:\n        - name: primeiro-pv\n            hostPath:\n                persistentVolumeClaim:\n                    claimName: pvc-1\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"storage-classes",children:"Storage Classes"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211124053008318",src:s(24719).A+"",width:"760",height:"329"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"A diferen\xe7a da item anteriror e que com um storage classes a cria\xe7\xe3o do disco na nuvem e do persistente volume \xe9 feita automaticamente."}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um storage class (sc) no google cloud"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n    name: nome-sc\nprovisioner: kubernetes.io/gce-pd\nparameters:\n    type: pd-standard\n    fstype: ext4\n    replication-type: none\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Atrelando um storage class no PVC"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n    name: pvc-2\nspec:\n    accessModes:\n        - ReadWriteOnde\n    resources:\n        requests:\n            storage: 10Gi\n    storageClassName: nome-sc\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um pod"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n    name: pod-pv\nspec:\n    containers:\n        - name: nginx-container\n            image: nginx-latest\n            volumeMounts:\n                - mountPath: /volume-dentro-do-container\n                name: primeiro-pv\n    volumes:\n        - name: primeiro-pv\n            hostPath:\n                persistentVolumeClaim:\n                    claimName: pvc-2\n"})}),"\n",(0,o.jsx)(n.h5,{id:"comandos-3",children:"Comandos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# listando storage class existentes\nkubectl get storageclass\n#ou\nkubectl get sc\n\n# listar persistence volumes claim\nkubectl get pvc\n\n#listar persistence volume\nkubectl get pv\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"statefull-set",children:"Statefull Set"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"StatefulSet | Kubernetes Engine Documentation | Google Cloud",src:s(67971).A+"",width:"660",height:"650"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Bem similar a um Deployment, mas, ele \xe9 voltado para aplica\xe7\xf5es a Pods que devem manter o seu estado que eles s\xe3o Stateful. Isso significa que quando um Pod reinicia ou falha por algum motivo dentro de um Stateful Set e volta a execu\xe7\xe3o, o arquivo \xe9 mantido."}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando pods usando o statefull set ao inv\xe9z de deployments"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: systema-noticias-statefull-set\nspec:\n  serviceName: svc-sistema-noticias\n  replicas: 2\n  selector:\n    matchLabels:\n      app: sistema-noticias\n  template:\n    metadata:\n      labels:\n        app: sistema-noticias\n      name: sistema-noticias\n    spec:\n      containers:\n      - name: sistema-noticias-container\n        image: aluracursos/sistema-noticias:1\n        resources:\n          limits:\n            memory: "128Mi"\n            cpu: "500m"\n        ports:\n        - containerPort: 80\n        envFrom:\n          - configMapRef:\n              name: sistema-configmap\n        volumeMounts:\n          - name: vl-imagem\n            mountPath: "/var/www/uploads"\n          - name: vl-sessao\n            mountPath: /tmp\n      volumes:\n        - name: vl-imagem\n          persistentVolumeClaim:\n            claimName: imagem-pvc\n        - name: vl-sessao\n          persistentVolumeClaim:\n            claimName: sessao-pvc\n'})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"vai criar a estrutura e vai manter os dados salvos no volumes atachados, use os comandos:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# Para aplicar\nkubectl apply -f <nome-file>\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Lembrando que para isso antes \xe9 necessario criar os pvc (volumes que ser\xe3o usados)"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# imagem-pvc.yml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: imagem-pvc\nspec:\n  resources:\n    requests:\n      storage: 1Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n\n# sessao-pvc.yml\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: sessao-pvc\nspec:\n  resources:\n    requests:\n      storage: 1Gi\n  volumeMode: Filesystem\n  accessModes:\n    - ReadWriteOnce\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Salve em arquivos com os determinados nomes e de o comando abaixo"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"# para aplicar\nkubectl apply -f <nome>\n\n# para ver os pvcs criados\nkubectl get pvc\n\n# para ver os pvs criados\nkubectl get pv\n\n# para ver o storage classe existente\nkubectl get sc\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"recurso-para-healthcheck",children:"Recurso para healthcheck"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:['o kubernetes consegue gerenciar por si proprio o pod, porem os container dentro ("a aplica\xe7\xe3o") ele precisa de ajuda pra gerenciar se esta vivo, par isso ele utiliza o ',(0,o.jsx)(n.strong,{children:"liveness e o readiness"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"O Kubernetes nem sempre tem como saber se a aplica\xe7\xe3o est\xe1 saud\xe1vel"}),"\n",(0,o.jsx)(n.li,{children:"Podemos criar crit\xe9rios para definir se a aplica\xe7\xe3o est\xe1 saud\xe1vel atrav\xe9s de probes"}),"\n",(0,o.jsxs)(n.li,{children:["Como criar LivenessProbes com o campo ",(0,o.jsx)(n.code,{children:"livenessProbe"})]}),"\n",(0,o.jsx)(n.li,{children:"LivenessProbes podem fazer a verifica\xe7\xe3o em diferentes intervalos de tempo via HTTP"}),"\n",(0,o.jsxs)(n.li,{children:["Como criar ReadinessProbes com o campo ",(0,o.jsx)(n.code,{children:"readinessProbe"})]}),"\n",(0,o.jsx)(n.li,{children:"ReadinessProbes podem fazer a verifica\xe7\xe3o em diferentes intervalos de tempo via HTTP"}),"\n",(0,o.jsx)(n.li,{children:"LivenessProbes s\xe3o para saber se a aplica\xe7\xe3o est\xe1 saud\xe1vel e/ou se deve ser reiniciada, enquanto ReadinessProbes s\xe3o para saber se a aplica\xe7\xe3o j\xe1 est\xe1 pronta para receber requisi\xe7\xf5es depois de iniciar"}),"\n",(0,o.jsx)(n.li,{children:"Al\xe9m do HTTP, tamb\xe9m podemos fazer verifica\xe7\xf5es via TCP"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["link: ",(0,o.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",children:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/"})]}),"\n",(0,o.jsx)(n.h4,{id:"liveness-prob",children:"Liveness Prob"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Entenda como forma de checagem se o contanier tem uma boa saude, declaramos junto a declara\xe7\xe3o co container."}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"livenessProbe:\n httpGet:  # metodo que vamos usar\n  path: /  # path aonde vamos bater com a requisi\xe7\xe3o\n  port: 80 # porta do container\n periodSeconds: 10 # de quanto em quanto tempo vamos validar em segundos\n failureThreshold: 3 # quandos erros vamos aceitar antes de reiniciar o container    \n initialDelaySeconds: 20 # Delay inicial para que o container possa subir\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211126060259581",src:s(39420).A+"",width:"757",height:"532"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"readiness-probes",children:"Readiness Probes"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:'Entenda como a prova de que um container pode receber requisi\xe7\xf5es, que que ele esta "Ready" (pronto) para come\xe7ar a receber requisi\xe7\xf5es.'}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"readinessProbe:\n  httpGet:  # metodo que vamos usar para validar se o caontainer esta pronto\n    path: /  # path aonde vamos bater com a requisi\xe7\xe3o\n    port: 80 # porta do container\n  periodSeconds: 10 # de quanto em quanto tempo vamos validar em segundos\n  failureThreshold: 5 # quanto erros s\xe3o tentativas s\xe3o toleraveis aonte de come\xe7ar a madar requisi\xe7\xe3o para o container\n  initialDelaySeconds: 3 # Delay inicial ap\xf3s o container subir, para iniciar as valida\xe7\xf5es se o container esta pronto\n"})}),"\n",(0,o.jsx)(n.p,{children:"EX:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211126061230975",src:s(58389).A+"",width:"789",height:"667"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"recurso-de-escalabilidade",children:"Recurso de escalabilidade"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Permite escalara os pods deacordo com a demanda"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"HPA - Horizontal pod autpscale"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"hpa---horizontal-pod-autoscale",children:"HPA - Horizontal Pod AutoScale"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Basea-se no uso de cpu para realizar o scalonamento. por isso precisamos informar em nossos ",(0,o.jsx)(n.strong,{children:"deployments"})," os defini\xe7\xf5es de cpus usadas por aquele pod."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"        resources:\n          limits:\n            memory: 128Mi\n            cpu: 500m\n          requests:\n            cpu: 10m # mili core cpu\n            memory: 128Mi\n"})}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211128085641444",src:s(65984).A+"",width:"836",height:"601"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Criando um arquivo de configura\xe7\xe3o de HPA"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: autoscaling/v2beta2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: primeiro-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: portal-noticias-deployment\n  minReplicas: 1\n  maxReplicas: 5\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 20\n"})}),"\n",(0,o.jsx)(n.h4,{id:"comandos-4",children:"Comandos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# listar configura\xe7\xf5es de HPA\nkubectl get hpa\n"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Obs:"})," Apenas isso n\xe3o sera necessario pra que funcione, \xe9  necessario configurar um servidor de metricas vai garadar as metricas de consumo. para isso usamos o arquivo abaixo:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["links: ",(0,o.jsx)(n.a,{href:"https://github.com/kubernetes-sigs/metrics-server",children:"https://github.com/kubernetes-sigs/metrics-server"})]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: system:aggregated-metrics-reader\n  labels:\n    rbac.authorization.k8s.io/aggregate-to-view: "true"\n    rbac.authorization.k8s.io/aggregate-to-edit: "true"\n    rbac.authorization.k8s.io/aggregate-to-admin: "true"\nrules:\n- apiGroups: ["metrics.k8s.io"]\n  resources: ["pods", "nodes"]\n  verbs: ["get", "list", "watch"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: metrics-server:system:auth-delegator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:auth-delegator\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: metrics-server-auth-reader\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: extension-apiserver-authentication-reader\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: apiregistration.k8s.io/v1beta1\nkind: APIService\nmetadata:\n  name: v1beta1.metrics.k8s.io\nspec:\n  service:\n    name: metrics-server\n    namespace: kube-system\n  group: metrics.k8s.io\n  version: v1beta1\n  insecureSkipTLSVerify: true\n  groupPriorityMinimum: 100\n  versionPriority: 100\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    k8s-app: metrics-server\nspec:\n  selector:\n    matchLabels:\n      k8s-app: metrics-server\n  template:\n    metadata:\n      name: metrics-server\n      labels:\n        k8s-app: metrics-server\n    spec:\n      serviceAccountName: metrics-server\n      volumes:\n      # mount in tmp so we can safely use from-scratch images and/or read-only containers\n      - name: tmp-dir\n        emptyDir: {}\n      containers:\n      - name: metrics-server\n        image: k8s.gcr.io/metrics-server/metrics-server:v0.3.7\n        imagePullPolicy: IfNotPresent\n        args:\n          - --cert-dir=/tmp\n          - --secure-port=4443\n        ports:\n        - name: main-port\n          containerPort: 4443\n          protocol: TCP\n        securityContext:\n          readOnlyRootFilesystem: true\n          runAsNonRoot: true\n          runAsUser: 1000\n        volumeMounts:\n        - name: tmp-dir\n          mountPath: /tmp\n      nodeSelector:\n        kubernetes.io/os: linux\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: metrics-server\n  namespace: kube-system\n  labels:\n    kubernetes.io/name: "Metrics-server"\n    kubernetes.io/cluster-service: "true"\nspec:\n  selector:\n    k8s-app: metrics-server\n  ports:\n  - port: 443\n    protocol: TCP\n    targetPort: main-port\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: system:metrics-server\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - nodes\n  - nodes/stats\n  - namespaces\n  - configmaps\n  verbs:\n  - get\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: system:metrics-server\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:metrics-server\nsubjects:\n- kind: ServiceAccount\n  name: metrics-server\n  namespace: kube-system\n'})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Links:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://cursos.alura.com.br/course/kubernetes-deployments-volumes-escalabilidade/task/80509",children:"https://cursos.alura.com.br/course/kubernetes-deployments-volumes-escalabilidade/task/80509"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler",children:"https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h1,{id:"entendendo-o-helm",children:"Entendendo o HELM"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Helm e um gerenciador de pacotes de cluster kunerntes, imagine que num deploys de apenas um item eu tenha os aquivos abaixo"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211128091344881",src:s(26630).A+"",width:"1478",height:"943"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Nesse caso teremos que dar 5 ",(0,o.jsx)(n.code,{children:"kubectl apply -f"})," para fazer deploy da nossa aplica\xe7\xe3o, ou seja realizar o controle manual do processo. Para resolver isso \xe9 que o HELM foi criado."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"componetes",children:"Componetes"}),"\n",(0,o.jsx)(n.h3,{id:"chart---exemplos",children:"Chart - exemplos"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Pense em chart com um pacote de vers\xe3o que contem todos os arquivos ",(0,o.jsx)(n.strong,{children:".yaml"})," que compoem aquela vers\xe3o."]}),"\n",(0,o.jsx)(n.p,{children:"ex:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211128091657361",src:s(58436).A+"",width:"1770",height:"874"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"image-20211128091727836",src:s(70427).A+"",width:"1790",height:"520"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},32090:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120093342399-e53c96a2e552e0a3fd4f3e3e4a9c0d89.png"},37024:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205700816-d4173d38bb0c80838153f21f57da62f1.png"},39420:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211126060259581-142587ec495ab7488ca06684781a66e1.png"},46578:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120105736428-fbe0d7c0b193fd4755272de5ff2d93b7.png"},48011:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122063143936-4ca48aaffad9b94a4f2b052c94bcb1f2.png"},53190:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122060546098-e5fdf0a3c9efe3563cae854fe26b6490.png"},53619:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120085314918-edf68c66d7dcadec2e973ff72845f46f.png"},55417:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205740206-7853437848f1c611e1b387ae2c73526f.png"},57383:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120094146342-5f6342adb14951eed0041a5807fb514b.png"},57935:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122055649330-6aa8398aef598797381f2fd12a16e575.png"},58389:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211126061230975-0acae24bbf631405d912b91747f67a2a.png"},58436:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211128091657361-a081e86a77445b0721e2a9bc22f24926.png"},61746:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205347741-b8dcae168d0fcd383aa2e606dc8a6fe2.png"},65984:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211128085641444-0fef2bc937fde30784568ef47730ae69.png"},67006:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122061513408-f62868d925bbd71161431ff81c797670.png"},67971:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/statefulset-7a31f972f8f1657517059c3e50103dc6.png"},69358:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120110649603-10bfd5cb3612da0f13fdeff4197a280f.png"},69775:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120085353313-913d2478e694347d0ab329f44a2832d0.png"},70427:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211128091727836-fb0c0d051b4d4bc15f70168bc0d6d553.png"},71097:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120110007635-87e9510fe799fc861371bfe72383bd29.png"},74513:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118210009141-6378d1b5ad524d51ffcc74a3abf29366.png"},79336:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211118205722849-45aacb17725fc4815daa47e512b4cfd2.png"},88211:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211123062417716-8277d6db230715789b4c8bba9a690b25.png"},91019:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120094110671-38308bc91ca57b9fe9fa93e68cfa84b5.png"},91903:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122063059510-3a223fd7a84c6d5ea84bac83f7404078.png"},92625:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122063130716-c2814fb1fcb8bc57136b74fcdae0a396.png"},92803:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211122060612288-a86fd1f23613f78444bee5483aff5a14.png"},99881:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/image-20211120111517650-c0a3387006cefc3c47c618b5772ef2cf.png"}}]);