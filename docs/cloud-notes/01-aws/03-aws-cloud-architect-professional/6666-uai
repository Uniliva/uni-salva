Olá fiz alguma anotações sobre recursos AWS para a certificação architect progfessiona da AWS, porém tem alguns erros de português então corrija os erros de português.
Adicione explicações sobre o caso acho necessário para tornar os itens mais fáceis de entender e comece o primeiro nivel de cabeçarios do markdown a partir do nível 2 (##) use > para o nivel 3 (ou seja ao invez de colocar ### Titulo coloque > titulo) e negrito para o nivel 4 (apenas o titulo), NÃO REMOVAS AS IMAGENS
- Adicione notas (perguntas e resposta ou detalhamentos) E LINKS de temas que questões que podem cair na prova de certificação.
- estou usando o docusarus então use as admonitions para isso
- Não der as DICAS de Prova Agora, vou te pedir depois
Faça isso para a documentação abaixo:



### Amazon SNS

- Simple Notification Service.
- Tem escopo regional. Gerenciado pela AWS.
- Produtor -> **envia** > topico -> **envia** > assinante (pub/sub pattern).
- O tópico da **push** na mensagem para os assinantes.
- Usado quando se precisa notificar varios sistemas.
- **Cada tópico pode ter mais 12 milhões de assinantes.**
- **Limite de 100000 tópicos. (soft Limit)**
- Não retém mensagens, após notificar o assinante é descartada.
- **Assinantes (http, email, lambda, mobile, kinesis data firehose).**
- Caso garantir a ordem de entrega use a SQS FIFO.
  - Serve para ordenar as mensagens.
  - Usado para Deduplicação de mensagem
- **Politica de acesso**.
  - Permite definir uma política de quem pode enviar mensagens para o tópico.
  - Semelhande a do SQS.
- **Encriptação**
  - Em transito vem habilitado por padrão (HTTPS).
  - Do lado do servidor, usa a SQS Key (SSE-SNS), mas é possivel usar uma chave criada no KMS (SSE-KMS).
- **SNS + SQS - Fan Out pattern**
  - A ideia é usar um tópico SNS na frente de **N** fila para garantir que aquela mensagem possa se processado por **N** sistema, seja para evitar perda de dados ou por causas de serviços que só permitem notificar um único tópico (ex: **S3 events**).
  - Pode usar em várias regiões.
    ![fan out](assets/image-20210902211203812-1676968809224-3.png)
  - **Message Filtering** - permite filtrar as mensagem e notificar os assinantes de acordo com os filtros.
    - Uma json policy para filtragem.
      ![image-20230221054138361](assets/image-20230221054138361.png)
- Tem integração com o **Kinessis data firehose.**
  ![image-20230221055222919](assets/image-20230221055222919.png)
- **Retry**
  - Caso o subscrito do tópico esteja fora há um processo de retry definido via policy.
  - Caso não seja um serviço AWS, tem que se configurar uma política de retry.
    ![image-20230221060719941](assets/image-20230221060719941.png)
  - Em ultimo caso pode se uma uma DLQ.
    - E adicionado junto a subscrição
      ![image-20230221061229092](assets/image-20230221061229092.png)

---
